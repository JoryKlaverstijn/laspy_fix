name: Build

on:
  push:
    branches:
    - '*'
  pull_request:
    branches:
    - '*'
jobs:
  build:
    name: Python ${{ matrix.python-version }} - ${{ matrix.os }} - laz=${{ matrix.laz-backend }}

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: [ "3.7", "3.8", "3.9", "3.10", "3.11" ]
        laz-backend: [ None, lazrs, laszip ]

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Display Python version
      run: |
          python -c "import sys; print(sys.version)"

    - name: Install With LAZ backend
      if: matrix.laz-backend != 'None'
      run: pip install .[${{ matrix.laz-backend }},dev]

    - name: Install Without LAZ backend
      if: matrix.laz-backend == 'None'
      run: pip install .[dev]

    # Install dependencies which are optional
    # so that the tests corresponding to them runs.
    - name: Install Optional depencencies
      run: pip install pyproj requests rangehttpserver

    # Some crs tests require pdal
    # and its easier to install it on ubuntu
    - name: Install pdal
      if: matrix.laz-backend == 'None' && matrix.os == 'ubuntu-latest'
      run: sudo apt install -y pdal

    - name: Run Tests
      run: |
        pytest -v



  formatting:
    runs-on: ubuntu-latest

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Install black
        run: |
          python3 -m pip install setuptools
          python3 -m pip install black==22.3.0

      - name: Run black check
        run: python3 -m black --check laspy tests



